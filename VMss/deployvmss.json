{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "osDiskType": {
            "type": "String"
        },
        "addressPrefixes": {
            "type": "Array"
        },
        "subnets": {
            "type": "Array"
        },
        "virtualNetworkId": {
            "type": "String"
        },
        "virtualNetworkName": {
            "type": "String"
        },
        "networkSecurityGroups": {
            "type": "Array"
        },
        "networkInterfaceConfigurations": {
            "type": "Array"
        },
        "backendPoolName": {
            "type": "String"
        },
        "loadBalancerName": {
            "type": "String"
        },
        "loadbalancingRuleFrontEndPort": {
            "type": "Int"
        },
        "loadbalancingRuleBackendEndPort": {
            "type": "Int"
        },
        "loadbalancingRuleProtocol": {
            "type": "String"
        },
        "InboundNATRuleFrontEndPortRangeStart": {
            "type": "Int"
        },
        "vmName": {
            "type": "String"
        },
        "virtualMachineScaleSetName": {
            "type": "String"
        },
        "instanceCount": {
            "type": "String"
        },
        "instanceSize": {
            "type": "String"
        },
        "zone": {
            "type": "Array"
        },
        "zoneBalance": {
            "type": "String"
        },
        "platformFaultDomainCount": {
            "type": "String"
        },
        "scaleInPolicy": {
            "type": "Object"
        },
        "upgradePolicy": {
            "type": "String"
        },
        "hibernationEnabled": {
            "type": "Bool"
        },
        "adminUsername": {
            "type": "String"
        },
        "adminPassword": {
            "type": "SecureString"
        },
        "customData": {
            "type": "SecureString"
        },
        "securityType": {
            "type": "String"
        },
        "secureBoot": {
            "type": "Bool"
        },
        "vTPM": {
            "type": "Bool"
        }
    }, 
	// Definition des variables
    "variables": {
        "storageApiVersion": "2021-01-01",
        "networkApiVersion": "2020-11-01",
        "virtualMachineScaleSetApiVersion": "2024-07-01",
        "namingInfix": "[toLower(substring(concat(parameters('virtualMachineScaleSetName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "autoScaleResourceName": "[concat(substring(parameters('virtualMachineScaleSetName'), 0, min(length(parameters('virtualMachineScaleSetName')), 55)), 'autoscale')]",
        "vmssId": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSetName'))]"
    },
    "resources": [
		//Creation du reseau virtuel
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
            }
        },
		//Creation des groupes de securite
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups')[copyIndex()].name]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroups')[copyIndex()].rules]"
            },
            "copy": {
                "name": "networkSecurityGroups",
                "count": "[length(parameters('networkSecurityGroups'))]"
            }
        },
		//Creation de l'adresse IP publique
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('loadBalancerName'), '-publicip')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "zones": [
                "1",
                "2"
            ],
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 15
            }
        },
		//Creation du LoadBalancer
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2021-05-01",
            "name": "[parameters('loadBalancerName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', concat(parameters('loadBalancerName'), '-publicip'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-frontendconfig01')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('loadBalancerName'), '-publicip'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('backendPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-lbrule01')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-frontendconfig01'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('backendPoolName'))]"
                            },
                            "frontendPort": "[parameters('loadbalancingRuleFrontEndPort')]",
                            "backendPort": "[parameters('loadbalancingRuleBackendEndPort')]",
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 15,
                            "disableOutboundSnat": true,
                            "loadDistribution": "Default",
                            "protocol": "[parameters('loadbalancingRuleProtocol')]",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-probe01'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-probe01')]",
                        "properties": {
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "requestPath": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), json('null'), '/')]",
                            "port": "[if(equals(parameters('loadbalancingRuleProtocol'), 'Tcp'), parameters('loadbalancingRuleBackendEndPort'), '80')]",
                            "protocol": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), 'Tcp', 'Http')]"
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-natRule01')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-frontendconfig01'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('backendPoolName'))]"
                            },
                            "protocol": "TCP",
                            "enableFloatingIP": false,
                            "enableTcpReset": false,
                            "backendPort": 22,
                            "frontendPortRangeStart": "[parameters('InboundNATRuleFrontEndPortRangeStart')]",
                            "frontendPortRangeEnd": "[add(parameters('InboundNATRuleFrontEndPortRangeStart'), if(equals(parameters('instanceCount'), json('null')), 0, 3599))]"
                        }
                    }
                ]
            }
        },
		//Creation de la configuration de l auto-scaling
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2021-05-01-preview",
            "name": "[variables('autoScaleResourceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('virtualMachineScaleSetName'))]"
            ],
            "properties": {
                "name": "[variables('autoScaleResourceName')]",
                "targetResourceUri": "[variables('vmssId')]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Default condition",
                        "capacity": {
                            "default": 2,
                            "minimum": 2,
                            "maximum": 20
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[variables('vmssId')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": "50"
                                },
                                "scaleAction": {
                                    "cooldown": "PT5M",
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[variables('vmssId')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": "20"
                                },
                                "scaleAction": {
                                    "cooldown": "PT5M",
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1"
                                }
                            }
                        ]
                    }
                ]
            }
        },
		//Creation de la configuration de la VM
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "[variables('virtualMachineScaleSetApiVersion')]",
            "name": "[parameters('virtualMachineScaleSetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "networkSecurityGroups",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
            ],
            "sku": {
                "name": "[parameters('instanceSize')]",
                "capacity": "[int(parameters('instanceCount'))]"
            },
            "zones": "[parameters('zone')]",
            "properties": {
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "fromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "[parameters('osDiskType')]"
                            }
                        },
                        "imageReference": {
                            "publisher": "canonical",
                            "offer": "ubuntu-24_04-lts",
                            "sku": "server",
                            "version": "latest"
                        }
                    },
                    "networkProfile": {
                        "networkApiVersion": "[variables('networkApiVersion')]",
                        "copy": [
                            {
                                "name": "networkInterfaceConfigurations",
                                "count": "[length(parameters('networkInterfaceConfigurations'))]",
                                "input": {
                                    "name": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name]",
                                    "properties": {
                                        "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                        "enableAcceleratedNetworking": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].enableAcceleratedNetworking]",
                                        "ipConfigurations": [
                                            {
                                                "name": "[concat(take(parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name, sub(80, length('-defaultIpConfiguration'))), '-defaultIpConfiguration')]",
                                                "properties": {
                                                    "subnet": {
                                                        "id": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].subnetId]"
                                                    },
                                                    "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                                    "applicationGatewayBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].applicationGatewayBackendAddressPools]",
                                                    "loadBalancerBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerBackendAddressPools]",
                                                    "publicIPAddressConfiguration": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, ''), json('null'), union(json(concat('{\"name\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, '\"}'))\n        ,json('{\"properties\": { \"idleTimeoutInMinutes\": 15}}')))]"
                                                }
                                            }
                                        ],
                                        "networkSecurityGroup": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, ''), json('null'),json(concat('{\"id\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, '\"}')))]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": []
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": false,
                            "patchSettings": {
                                "patchMode": "ImageDefault"
                            }
                        },
                        "customData": "[parameters('customData')]"
                    },
                    "securityProfile": {
                        "securityType": "[parameters('securityType')]",
                        "uefiSettings": {
                            "secureBootEnabled": "[parameters('secureBoot')]",
                            "vTpmEnabled": "[parameters('vTPM')]"
                        }
                    }
                },
                "zoneBalance": "[parameters('zoneBalance')]",
                "orchestrationMode": "Flexible",
                "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]",
                "scaleInPolicy": "[parameters('scaleInPolicy')]",
                "upgradePolicy": {
                    "mode": "[parameters('upgradePolicy')]"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}